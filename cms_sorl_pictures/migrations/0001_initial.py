# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2017-03-02 03:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0016_auto_20160608_1535'),
    ]

    operations = [
        migrations.CreateModel(
            name='SorlPicture',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='cms_sorl_pictures_sorlpicture', serialize=False, to='cms.CMSPlugin')),
                ('image', sorl.thumbnail.fields.ImageField(upload_to=b'images', verbose_name='image')),
                ('url', models.CharField(blank=True, help_text='if present image will be clickable', max_length=255, null=True, verbose_name='link')),
                ('alt', models.CharField(blank=True, help_text='textual description of the image', max_length=255, null=True, verbose_name='alternate text')),
                ('longdesc', models.CharField(blank=True, help_text='additional description of the image', max_length=255, null=True, verbose_name='long description')),
                ('float', models.CharField(blank=True, choices=[(b'center', 'center'), (b'left', 'left'), (b'right', 'right')], max_length=10, null=True, verbose_name='side')),
                ('width', models.IntegerField(blank=True, help_text='in pixels; the max width that you want to display the image at; must be provided if no height is given', null=True, verbose_name='width')),
                ('height', models.IntegerField(blank=True, help_text='in pixels; the max height that you want to display the image at; must be provided is no width is given', null=True, verbose_name='height')),
                ('crop', models.CharField(blank=True, choices=[(b'noop', 'noop'), (b'center', 'center'), (b'top', 'top'), (b'right', 'right'), (b'bottom', 'bottom'), (b'left', 'left')], help_text="requires a width and height; 'noop' to simply scale the photo to fit, 'center' to scale and crop from the center from the smallest dimensions, 'top' to cut off the bottom, 'bottom', 'left, 'right', etc.; an incorrect value in this field will prevent the image from displaying", max_length=20, null=True, verbose_name='crop')),
                ('upscale', models.BooleanField(default=False, help_text='if the image is smaller then the defined dimensions, it will be enlarged to fit', verbose_name='upscale')),
                ('quality', models.IntegerField(blank=True, help_text='value from 0 - 100; if defined will determing the quality of the image; hire quality results in larger file sizes', null=True, verbose_name='quality')),
                ('progressive', models.BooleanField(default=True, help_text="save jpeg's as progressive jpeg's", verbose_name='progressive')),
                ('format', models.CharField(blank=True, choices=[(b'PNG', 'png'), (b'JPEG', 'jpeg')], max_length=10, null=True, verbose_name='format')),
                ('colorspace', models.CharField(blank=True, choices=[(b'RGB', 'rgb'), (b'GRAY', 'gray')], help_text='create thumbnails in color or grayscale', max_length=10, null=True, verbose_name='colorspace')),
                ('orientation', models.BooleanField(default=True, help_text="orient the thumbnails using the source image's EXIF tags for orientation", verbose_name='orientation')),
                ('page_link', models.ForeignKey(blank=True, help_text='if present image will be clickable', null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.Page', verbose_name='page')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
    ]
